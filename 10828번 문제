import java.util.*;
import java.io.*;

public class Main { 
	
	public static int[] stack;
	public static int size = 0;
	
	public static void main (String args[]) throws IOException {
			
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			StringBuilder sb = new StringBuilder();
			
			StringTokenizer st;
			
			int n = Integer.parseInt(br.readLine());
			
			stack = new int[n];
			
			while (n > 0) {
				n--;
				
				st = new StringTokenizer(br.readLine(), " ");
				
				switch (st.nextToken()) {
				
				case "push":
					push(Integer.parseInt(st.nextToken()));
					break;
				
				case "pop":
					sb.append(pop()).append('\n');
					break;
					
				case "size":
					sb.append(size()).append('\n');
					break;
					
				case "empty":
					sb.append(empty()).append('\n');
					break;
					
				case "top":
					sb.append(top()).append('\n');
					break;
					
				}				
			}
			
			System.out.println(sb);
	
	}
	
	public static void push(int item) {
		stack[size] = item;
		size++;
	}
	
	public static int pop() {
		if (size == 0)
			return -1;
		else {
			int res = stack[size - 1];
			stack[size-1] = 0;
			size--;
			return res;
		}
	}
	
	public static int size() {
		return size;
	}
	
	public static int empty() {
		if (size == 0) {
			return 1;
		}
		else {
			return 0;
		}
	}
	
	public static int top() {
		if (size == 0) {
			return -1;
		}
		else {
			return stack[size-1];
		}
	}
	
}

/*
public class Main { 
	
	static int[] stackArr;
	
	public static void push(int num, int length) {
		
		int[] newArr = new int[length-1]; 
		
		for (int i = 0; i < length - 1; i++) {
			newArr[i] = stackArr[i];
		}
		
		stackArr = new int[length];
		
		stackArr[length-1] = num;		
		
		for (int i = 0; i < length - 1; i++) {
			stackArr[i] = newArr[i];
		}
		
	}
	
	public static void top(int length) {
		if (length > 0)
			System.out.println(stackArr[length-1]);
		else
			System.out.println("-1");
	}
	
	public static void size() {
		System.out.println(stackArr.length);
	}
	
	public static void pop(int length) {
		if (length > 0) {
			int[] newArr = new int[length-1]; 
			
			for (int i = 0; i < length - 1; i++) {
				newArr[i] = stackArr[i];
			}
			
			stackArr = new int[length];	
			
			for (int i = 0; i < length - 1; i++) {
				stackArr[i] = newArr[i];
			}
			
			System.out.println(stackArr[length-1]);
		}
		else {
			System.out.println("-1");
		}
		
	}
	
	public static boolean empty(int length) {
		if (length > 0) 
			return false;
		
		return true;
	}
	
	public static void main (String args[]) throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int n = Integer.parseInt(br.readLine());
		
		StringTokenizer st;
		int len = 0;
		
		for (int i = 0; i < n; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			
			String order = st.nextToken();
			
			if (order.equals("push")) {
				int num = Integer.parseInt(st.nextToken());
				
				len++;
				push(num, len);
			}
			else if (order.equals("top")) {
				top(len);
			}
			else if (order.equals("size")) {
				size();
			}
			else if (order.equals("pop")) {
				len--;
				pop(len);
			}
			else if (order.equals("empty")) {
				if(!empty(len)) {
					System.out.println("0");
				}
				else {
					System.out.println("1");
				}
			}
			
		}
		
		br.close();
	}
}
*/
