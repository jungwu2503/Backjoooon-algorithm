import java.util.*;
import java.io.*;
import java.math.BigInteger;

public class Main {
	
	static StringBuilder sb = new StringBuilder();
	
	static void hanoi(int n, int start, int mid, int end) {
		// n = 원판수, start = 시작막대, mid = 가운데, end = 도착지
		if (n == 1) {
			sb.append(start+ " " + end + "\n");
			return;
		}
		
		hanoi(n - 1, start, end, mid);
		// n-1 개 원판을  start -> end -> mid
		sb.append(start+ " " + end + "\n");
		// start -> end
		hanoi(n - 1, mid, start, end);
		// mid의 n-1개 원판 -> end
		return;
	}
	
	public static void main (String args[]) throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int n = Integer.parseInt(br.readLine());
		
		BigInteger bi = new BigInteger("2");
		BigInteger c = bi.pow(n).subtract(BigInteger.ONE);
		sb.append(c).append("\n");
		
		if (n <= 20)
			hanoi(n, 1, 2, 3);
		
		System.out.println(sb);
		
		br.close();
	}	
	
}

