import java.util.*;
import java.io.*;

public class Main { 
	
	static long[][] d;
	
	public static long tile(int n) {
		d[0][0] = 0;
		d[1][0] = 2;
		d[2][0] = 7;
		d[2][1] = 1;
		for (int i = 3; i <= n; i++) {
			d[i][1] = (d[i - 1][1] + d[i - 3][0]) % 1000000007;
			d[i][0] = (3 * d[i - 2][0] + 2 * d[i - 1][0] + 2 * d[i][1]) % 1000000007;
		}
		return d[n][0];
	}
	
/*	static int[] d;
	
	public static int tile(int n) {
		if (n == 0) d[n] = 1;
		if (n == 1) d[n] = 2;
		if (n == 2) d[n] = 7;
		if (d[n] != 0) return d[n];
		int result = ((2*tile(n-1)) + (3*tile(n-2)));
		
		for (int i = 3; i <= n; i++) {
			result += (2 * tile(n - i)) % 1000000007;
		}
		
		return d[n] = result % 1000000007;
	} */
	
	public static void main (String args[]) throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int n = Integer.parseInt(br.readLine());
		
		d = new long[n+2][2];
		
		System.out.println(tile(n));
		
		br.close();
	}
}
