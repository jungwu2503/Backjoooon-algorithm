import java.util.*;
import java.io.*;

public class Main {
	
	/*
	public static void main (String args[]) throws IOException {
	
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int n = Integer.parseInt(br.readLine());
		int[] arr = new int[n];
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		for (int i = 0; i < n; i++) {
			arr[i] = Integer.parseInt(st.nextToken());
		}
		
		Arrays.sort(arr);
		
		int m = Integer.parseInt(br.readLine());
		
		st = new StringTokenizer(br.readLine());
		
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < m; i++) {
			// Arrays의 binarySearch 메서드 
			if (Arrays.binarySearch(arr, Integer.parseInt(st.nextToken())) >= 0) {
				sb.append(1).append('\n');
			} else {
				sb.append(0).append('\n');
			}
		}
		System.out.println(sb);
	}
	*/
	
	public static int[] ARR;
	
	public static int binarySearch(int key) {
		int startIndex = 0;
		int endIndex = ARR.length - 1;
		
		while (startIndex <= endIndex) {
			int mid = (startIndex + endIndex) / 2; // 중간 위치
			
			if (key < ARR[mid]) {
				endIndex = mid - 1;
			} else if (key > ARR[mid]) {
				startIndex = mid + 1;
			} else {
				return mid;
			}
			
		}
		
		return -1; // 값 못찾았을때		
		
	}
	
	public static void main (String args[]) throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int n = Integer.parseInt(br.readLine());
		ARR = new int[n];
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		for (int i = 0; i < n; i++) {
			ARR[i] = Integer.parseInt(st.nextToken());
		}
		
		Arrays.sort(ARR);

		int m = Integer.parseInt(br.readLine());
		
		st = new StringTokenizer(br.readLine());
		
		StringBuilder sb = new StringBuilder();
		
		for (int i = 0; i < m; i++) {
			// 찾았을때 1, 없을때 0
			if (binarySearch(Integer.parseInt(st.nextToken())) >= 0) {
				sb.append(1).append('\n');
			} else {
				sb.append(0).append('\n');
			}
			
		}
		
		System.out.println(sb);
		
		
		/*
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st;
		
		int n = Integer.parseInt(br.readLine());
		int[] line1 = new int[n];
		
		st = new StringTokenizer(br.readLine());
		
		for (int i = 0; i < n; i++) {
			line1[i] = Integer.parseInt(st.nextToken());
		}
		
		int m = Integer.parseInt(br.readLine());
		int[] line2 = new int[m];
		
		st = new StringTokenizer(br.readLine());
		
		for (int i = 0; i < n; i++) {
			line2[i] = Integer.parseInt(st.nextToken());
		}
		
		Arrays.sort(line1);
		
		int[] answerArr = new int[m];
		
		for (int i = 0; i < m; i++) {
			
			int pivot = line1[n/2];
			int startIndex = 0;
			int endIndex = 0;
			
			while (startIndex <= endIndex) {
				if (line2[i] == pivot) {
					answerArr[i] = 1;
					break;
				}
				if (line2[i] < pivot) {
					
				} else if
			}
			
		}
		
		*/
		
	} 
	
}
