문제 설명
철수는 행운을 빌면서 매주 로또를 산다. 그런데 살 때마다 고민이 로또 번호를 정하는 일이다.
그래서 로또 번호를 만드는 자신만의 방법을 생각하기로 하였다.
철수는 지금까지 로또의 각 회차의 1등 번호들의 정보를 가지고,
1부터 45번의 숫자들이 각각 1등 번호에 몇 번 나타났는지 횟수를 기록하였다.
그리고 이 중 횟수가 가장 작은 6개의 숫자를 로또 번호로 정하기로 하였다.
이 때, 횟수가 같은 것이 여러 개 나올 경우에는 작은 숫자를 우선으로 선택하기로 한다.
지금까지 로또 각 회차의 1등 숫자들이 주어질 때, 위의 방법에 의해서 구해지는 로또 번호를
구하는 프로그램을 작성하시오. 

입력
첫째 줄에 테스트 케이스의 개수를 나타내는 정수가 주어진다. 이 정수는 1 이상 10 이하이다.
각 테스트 케이스의 첫째 줄에는 지금까지 발표된 로또 회차의 개수 N (1 ≤ N ≤ 1000)이 주어진다.
이어지는 N 줄 각각에는 각 회차에서 발표된 1등 번호 6개가 사이에 공백을 두고 주어진다.
이 번호들은 1부터 45까지의 양의 정수이다. 

출력
각 테스트 케이스에 대한 답을 순서대로 각 줄에 출력한다.
각 케이스에 대해 답으로 선택된 6개의 로또 번호를 한 개의 빈칸을 사이에 두고 출력하는데,
작은 수부터 큰 수 순서로 출력한다. 

입력 예시 1
2
8
4 13 20 22 30 35
5 7 11 21 33 35
3 8 15 31 36 41
10 18 24 27 38 40
7 9 18 24 28 36
1 12 16 19 23 34
13 22 28 29 32 33
4 16 19 22 27 35
12
1 2 3 4 5 6
3 4 5 6 7 8
7 8 9 10 11 12
9 10 11 12 13 14
15 16 17 18 19 20
16 17 18 19 20 21
21 22 23 24 25 26
22 23 24 25 26 27
28 29 30 31 32 33
29 30 31 32 33 34
34 35 36 37 38 39
37 38 39 40 41 42
출력 예시 1
2 6 14 17 25 26
1 2 13 43 44 45


import java.io.*;
import java.util.*;

public class Main {

	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		
		StringTokenizer st;
		
		int n = Integer.parseInt(br.readLine());
		
		while (n > 0) {
			
			int times = Integer.parseInt(br.readLine());
			
			int[] arr = new int[46];
			for (int i = 0; i < times; i++) {
				st = new StringTokenizer(br.readLine());
				for (int j = 0; j < 6; j++) {
					arr[Integer.parseInt(st.nextToken())]++;
				}				
			}
			arr[0] = 9999;
			
			int[] result = new int[6];
			int min = 0;
			for (int i = 0; i < 6; i++) {					
				for (int j = 1; j <= 45; j++) {
					if (min == arr[j]) {
						result[i] = j;
						arr[j] = 9999;
						if (j != 45)
							min--;
						break;
					}
				}
				min++;
/*				for (int j = 0; j < 5; j++) {
					int tmp;
					if (result[j] > result[j+1]) {
						tmp = result[j];
						result[j] = result[j+1];
						result[j+1] = tmp;
					}
				}
				sb.append(result[i] + " ");*/
			}
			
			Arrays.sort(result);
			
			for (int j = 0; j < 6; j++) {
				sb.append(result[j] + " ");
			}
			sb.append('\n');
			/*for (int j = 0; j < 6; j++) {
				System.out.print(result[j] + " ");
			}
			System.out.println();*/
			n--;
		}
		
		System.out.println(sb);
		/*
		while (n > 0) {
			int num = Integer.parseInt(br.readLine());
			int[] arr = new int[46];
			
			for (int i = 0; i < num; i++) {
				st = new StringTokenizer(br.readLine());
				for (int j = 0; j < 6; j++) {
					arr[Integer.parseInt(st.nextToken())]++;
				}
			}
			
			ArrayList<Integer> res = new ArrayList<Integer>();
			int min = 0;
			while (true) {
				for (int i = 1; i <= 45; i++) {
					if (arr[i] == min) {
						res.add(i);
						min++;
					}
				}
				if (res.size() == 6) break;
			}
			
			System.out.println(res);
			n--;
		}*/
	}
}
