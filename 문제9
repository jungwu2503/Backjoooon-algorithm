문제 설명
입력으로 주어진 2개 이상의 정수 중 홀수를 다음과 같이 출력하는 프로그램을 작성하시오.

(1) 홀수가 2개 이상이면, 입력된 빈도수가 가장 높은 홀수를 출력한다.

(2) 빈도수가 같은 홀수가 다수이면 가장 큰 홀수를 출력한다.

(3) 홀수가 없으면 0을 출력한다.


입력
입력은 표준 입력으로 주어진다. 입력의 첫 줄에 정수 n이 주어진다. n은 2 이상 1,000 이하이다. 둘째 줄에는 n개의 정수가 빈칸을 사이에 두고 주어진다. 각 정수는 1 이상 9 이하이다.


출력
출력은 표준 출력으로 한다. 입력으로 들어온 정수들 중에서 홀수이고 가장 빈도수가 높으며 가장 큰 수를 출력한다.


입력 예시 1
5
9 2 8 4 5
출력 예시 1
9
입력 예시 2
6
3 7 5 5 2 7
출력 예시 2
7

import java.io.*;
import java.util.*;
 
public class Main {
 
    public static void main(String[] args) throws IOException {
 
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
         
        int n = Integer.parseInt(br.readLine());
        int[] arr = new int[n];
         
        StringTokenizer st = new StringTokenizer(br.readLine());
         
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(st.nextToken());
        }
         
        int[] oddCnt = new int[10];
         
        for (int i = 0; i < n; i++) {
            oddCnt[arr[i]]++;
        }
         
        int max = Integer.MIN_VALUE;
        int pos = 0;
        /*
        for (int i = 0; i < 10; i++) {
            System.out.print(oddCnt[i] + " ");
        }
        System.out.println("===");*/
         
        for (int i = 0; i < 10; i++) {
            if (i == 1 || i == 3 || i == 5 || i == 7 || i == 9) {
                if (oddCnt[i] > max) {
                    max = oddCnt[i];
                    pos = i;
                } else if (oddCnt[i] == max) {
                    pos = i;
                }
            } else {
                continue;
            }
        }
         
        System.out.println(pos);
         
    }
 
}
