import java.io.*;
import java.util.*;

public class BallPark {
	
	public static void readArray(int data[][], Scanner sc) {
		int row = data.length;
		int col = data[0].length;
		
		for (int i = row-1; i >= 0; i--) 
			for (int j = 0; j < col; j++)
				data[i][j] = sc.nextInt();		
	}
	
	public static void printArray(int data[][]) {
		int row = data.length;
		int col = data[0].length;
		
		for (int i = row-1; i >= 0; i--) {
			for (int j = 0; j < col; j++) {
				System.out.print(data[i][j] + " ");
			}
			System.out.println();
		}
	}

	public static void main(String[] args) {
		Scanner sc = null;
		try {
			sc = new Scanner(new File("ballpark.inp"));
		} catch (FileNotFoundException e) {
		}
		int row = sc.nextInt();
		int col = sc.nextInt();
		int data[][] = new int[row][col];
		int accum[][] = new int[row][col]; // accumulator
		
		readArray(data, sc);
		System.out.println("=== data ===");
		printArray(data);
		
		int max = -1;
		
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < col; j++) {
				if (data[i][j] == 1) {
					accum[i][j] = 0;
					continue;
				}
				accum[i][j] = 1;
				if (i-1 >= 0 && j-1 >= 0) {
					accum[i][j] = accum[i][j] + accum[i-1][j-1];
				}
				
				int kRow = 1;
				int kCol = 1;
				
				for (kRow = 1; kRow < accum[i][j]; kRow++) {
					if (i - kRow < 0) break;
					if (data[i-kRow][j] == 1) break;
				}
				
				for (kCol = 1; kCol < accum[i][j]; kCol++) {
					if (j-kCol < 0) break;
					if (data[i][j-kCol] == 1) break;
				}
				
				if (kRow > kCol) {
					accum[i][j] = kCol;
				} else {
					accum[i][j] = kRow;
				}
				
				if (accum[i][j] > max) {
					max = accum[i][j];
				}
				
			}
		}
		
		System.out.println("=== accumulator ===");
		printArray(accum);
		
		int maxCount = 0;
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < col; j++) {
				if (max == accum[i][j]) {
					maxCount++;
				}
			}
		}
		
		FileWriter wr = null;
		try {
			wr = new FileWriter(new File("bp.out"));
			String s = "" + max + " " + maxCount + "\n";
			wr.write(s,0,s.length());
			System.out.println(max + " " + maxCount);
			for (int i = 0; i < row; i++) {
				for (int j = 0; j < col; j++) {
					if (max == accum[i][j]) {
						s = "" + (j-max+2) + " " + (i-max+2) + "\n";
						wr.write(s,0,s.length());
						System.out.println((j-max+2) + " " + (i-max+2));
					}
				}
			}
			wr.close();
		} catch (IOException e) {
		}
		
	}

}
